<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[logger.isDebugEnabled()的作用]]></title>
      <url>/2017/08/31/usage-of-logger-isDebugEnabled/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><br>　　在项目中经常会看到这样的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if (logger.isDebugEnabled()) &#123;</div><div class="line">    logger.debug(message);</div><div class="line">&#125;</div></pre></td></tr></table></figure></excerpt></p>
<h5 id="为什么要这样做呢？"><a href="#为什么要这样做呢？" class="headerlink" title="为什么要这样做呢？"></a><strong>为什么要这样做呢？</strong></h5><a id="more"></a>
<p><the rest="" of="" contents="" |="" 余下全文=""><br>　　且看isDebugEnabled()的源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">public boolean isDebugEnabled() &#123;</div><div class="line">  if(repository.isDisabled(Level.DEBUG_INT))</div><div class="line">      return false;</div><div class="line">  return Level.DEBUG.isGreaterOrEqual(this.getEffectiveLevel());</div><div class="line">&#125;</div></pre></td></tr></table></figure></the></p>
<p>　　以下是debug()的源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">public void debug(Object message) &#123;</div><div class="line">    if(repository.isDisabled(Level.DEBUG_INT))</div><div class="line">        return;</div><div class="line">    if(Level.DEBUG.isGreaterOrEqual(this.getEffectiveLevel())) &#123;</div><div class="line">        forcedLog(FQCN, Level.DEBUG, message, null);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　可见，debug()中做了跟isDebugEnabled()几乎一样的判断，看起来直接调用debug()比先判断isDebugEnabled()更加效率。<br>　　此时来看下面的代码：<br><code>logger.debug(&quot;The money is &quot; + getTotalMoney());</code></p>
<p>　　假设我们的日志级别设置为info，debug()方法调用后会判断<code>if(repository.isDisabled(Level.DEBUG_INT))</code>，然后return。但是在调用debug()方法时，必须提供参数。要获得参数，就需要执行getTotalMoney()并拼接。假设这个获取参数的过程需要10秒钟，则系统会在花费10秒后决定return，这显然很得不偿失。<br>　　加上logger.isDebugEnabled()判断，只会使写日志的时间增加大概万分之一，但是如果不加此判断，系统可能需要花费更多的时间，所以在大多数情况下，在输出debug日志前加上logger.isDebugEnabled()比较好。</p>
]]></content>
      
        <categories>
            
            <category> 术业专攻 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
            <tag> Log </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
