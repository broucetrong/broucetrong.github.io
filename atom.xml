<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Broucetrong&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/Broucetrong/blog.git/"/>
  <updated>2017-09-10T12:11:33.692Z</updated>
  <id>https://github.com/Broucetrong/blog.git/</id>
  
  <author>
    <name>Broucetrong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前赤壁赋 - 苏轼</title>
    <link href="https://github.com/Broucetrong/blog.git/2017/09/10/poetry-former-chibi-fu/"/>
    <id>https://github.com/Broucetrong/blog.git/2017/09/10/poetry-former-chibi-fu/</id>
    <published>2017-09-10T12:09:39.316Z</published>
    <updated>2017-09-10T12:11:33.692Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><br>　　壬戌之秋， 七月既望， 苏子与客泛舟游于赤壁之下。 清风徐来， 水波不兴。 举酒属客， 诵明月之诗， 歌窈窕之章。 少焉， 月出于东山之上， 徘徊于斗牛之间。 白露横江， 水光接天。 纵一苇之所如， 凌万顷之茫然。 浩浩乎如冯虚御风， 而不知其所止； 飘飘乎如遗世独立， 羽化而登仙。<br><a id="more"></a></excerpt></p>
<p><the rest="" of="" contents="" |="" 余下全文=""><br>　　于是饮酒乐甚， 扣舷而歌之。 歌曰： “桂棹兮兰桨， 击空明兮溯流光。 渺渺兮于怀， 望美人兮天一方。” 客有吹洞萧者， 倚歌而和之， 其声呜呜然： 如怨如慕， 如泣如诉； 余音袅袅， 不绝如缕； 舞幽壑之潜蛟， 泣孤舟之嫠妇。<br>　　苏子愀然， 正襟危坐， 而问客曰： “何为其然也？” 客曰： “月明星稀， 乌鹊南飞， 此非曹孟德之诗乎？ 西望夏口， 东望武昌。 山川相缪， 郁乎苍苍； 此非孟德之困于周郎者乎？ 方其破荆州， 下江陵， 顺流而东也， 舳舻千里， 旌旗蔽空， 酾酒临江， 横槊赋诗； 固一世之雄也， 而今安在哉？ 况吾与子， 渔樵于江渚之上， 侣鱼虾而友糜鹿， 驾一叶之扁舟， 举匏樽以相属； 寄蜉蝣与天地， 渺沧海之一粟。 哀吾生之须臾， 羡长江之无穷； 挟飞仙以遨游， 抱明月而长终； 知不可乎骤得， 托遗响于悲风。”<br>　　苏子曰： “客亦知夫水与月乎？ 逝者如斯， 而未尝往也； 盈虚者如彼， 而卒莫消长也。 盖将自其变者而观之， 而天地曾不能一瞬； 自其不变者而观之， 则物于我皆无尽也。 而又何羡乎？ 且夫天地之间， 物各有主。 苟非吾之所有， 虽一毫而莫取。 惟江上之清风， 与山间之明月， 耳得之而为声， 目遇之而成色。 取之无禁， 用之不竭。 是造物者之无尽藏也， 而吾与子之所共适。”<br>　　客喜而笑， 洗盏更酌， 肴核既尽， 杯盘狼藉。 相与枕藉乎舟中， 不知东方之既白。</the></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;　　壬戌之秋， 七月既望， 苏子与客泛舟游于赤壁之下。 清风徐来， 水波不兴。 举酒属客， 诵明月之诗， 歌窈窕之章。 少焉， 月出于东山之上， 徘徊于斗牛之间。 白露横江， 水光接天。 纵一苇之所如， 凌万顷之茫然。 浩浩乎如冯虚御风， 而不知其所止； 飘飘乎如遗世独立， 羽化而登仙。&lt;br&gt;
    
    </summary>
    
      <category term="诗词" scheme="https://github.com/Broucetrong/blog.git/categories/%E8%AF%97%E8%AF%8D/"/>
    
    
  </entry>
  
  <entry>
    <title>logger.isDebugEnabled()的作用</title>
    <link href="https://github.com/Broucetrong/blog.git/2017/08/31/usage-of-logger-isDebugEnabled/"/>
    <id>https://github.com/Broucetrong/blog.git/2017/08/31/usage-of-logger-isDebugEnabled/</id>
    <published>2017-08-31T11:54:15.861Z</published>
    <updated>2017-09-01T04:41:29.562Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><br>　　在项目中经常会看到这样的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if (logger.isDebugEnabled()) &#123;</div><div class="line">    logger.debug(message);</div><div class="line">&#125;</div></pre></td></tr></table></figure></excerpt></p>
<h5 id="为什么要这样做呢？"><a href="#为什么要这样做呢？" class="headerlink" title="为什么要这样做呢？"></a><strong>为什么要这样做呢？</strong></h5><a id="more"></a>
<p><the rest="" of="" contents="" |="" 余下全文=""><br>　　且看isDebugEnabled()的源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">public boolean isDebugEnabled() &#123;</div><div class="line">  if(repository.isDisabled(Level.DEBUG_INT))</div><div class="line">      return false;</div><div class="line">  return Level.DEBUG.isGreaterOrEqual(this.getEffectiveLevel());</div><div class="line">&#125;</div></pre></td></tr></table></figure></the></p>
<p>　　以下是debug()的源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">public void debug(Object message) &#123;</div><div class="line">    if(repository.isDisabled(Level.DEBUG_INT))</div><div class="line">        return;</div><div class="line">    if(Level.DEBUG.isGreaterOrEqual(this.getEffectiveLevel())) &#123;</div><div class="line">        forcedLog(FQCN, Level.DEBUG, message, null);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　可见，debug()中做了跟isDebugEnabled()几乎一样的判断，看起来直接调用debug()比先判断isDebugEnabled()更加效率。<br>　　此时来看下面的代码：<br><code>logger.debug(&quot;The money is &quot; + getTotalMoney());</code></p>
<p>　　假设我们的日志级别设置为info，debug()方法调用后会判断<code>if(repository.isDisabled(Level.DEBUG_INT))</code>，然后return。但是在调用debug()方法时，必须提供参数。要获得参数，就需要执行getTotalMoney()并拼接。假设这个获取参数的过程需要10秒钟，则系统会在花费10秒后决定return，这显然很得不偿失。<br>　　加上logger.isDebugEnabled()判断，只会使写日志的时间增加大概万分之一，但是如果不加此判断，系统可能需要花费更多的时间，所以在大多数情况下，在输出debug日志前加上logger.isDebugEnabled()比较好。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;　　在项目中经常会看到这样的代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;if (logger.isDebugEnabled()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    logger.debug(message);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/excerpt&gt;&lt;/p&gt;
&lt;h5 id=&quot;为什么要这样做呢？&quot;&gt;&lt;a href=&quot;#为什么要这样做呢？&quot; class=&quot;headerlink&quot; title=&quot;为什么要这样做呢？&quot;&gt;&lt;/a&gt;&lt;strong&gt;为什么要这样做呢？&lt;/strong&gt;&lt;/h5&gt;
    
    </summary>
    
      <category term="术业专攻" scheme="https://github.com/Broucetrong/blog.git/categories/%E6%9C%AF%E4%B8%9A%E4%B8%93%E6%94%BB/"/>
    
    
      <category term="Java" scheme="https://github.com/Broucetrong/blog.git/tags/Java/"/>
    
      <category term="Log" scheme="https://github.com/Broucetrong/blog.git/tags/Log/"/>
    
  </entry>
  
</feed>
